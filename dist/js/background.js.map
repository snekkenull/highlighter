{"version":3,"file":"js/background.js","mappings":"mBAEAA,OAAOC,QAAQC,YAAYC,aAAaC,IACb,YAAnBA,EAAQC,QAERL,OAAOC,QAAQK,iBACnB,IAGJN,OAAOC,QAAQM,UAAUJ,aAAY,CAACK,EAASC,EAAQC,KACnD,GAAqB,gBAAjBF,EAAQG,KAIR,OAHAX,OAAOY,QAAQC,KAAKC,IAAI,CAAC,oBAAqB,cAAeC,IACzDL,EAAaK,EAAK,KAEf,CACX,IAGJf,OAAOgB,KAAKC,UAAUd,aAAYe,MAAOC,EAAOC,EAAYC,KACxD,GAA0B,aAAtBD,EAAWE,QAAyBD,EAAIE,KAAKC,WAAW,QACxD,IAEI,MAAM,UAAEC,EAAY,UAAazB,OAAOY,QAAQC,KAAKC,IAAI,CAAEW,UAAW,KAChEC,EAAgBL,EAAIE,KAAOE,EAAUE,SAAS,IAAIC,IAAIP,EAAIE,KAAKM,gBAE/D7B,OAAO8B,UAAUC,cAAc,CACjCC,OAAQ,CAAEb,SACVc,MAAO,CAAC,gBAGRP,SACM1B,OAAOgB,KAAKkB,YAAYf,EAAO,CAAEgB,OAAQ,mBAEvD,CACA,MAAOC,GACHC,QAAQD,MAAM,0BAA2BA,EAC7C,CACJ,G","sources":["webpack://highlighter/./src/background/background.ts"],"sourcesContent":["\"use strict\";\n// Listen for installation or update\nchrome.runtime.onInstalled.addListener((details) => {\n    if (details.reason === 'install') {\n        // Open options page on install\n        chrome.runtime.openOptionsPage();\n    }\n});\n// Listen for messages from content script or popup\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.type === 'getSettings') {\n        chrome.storage.sync.get(['highlightSettings', 'whitelist'], (data) => {\n            sendResponse(data);\n        });\n        return true; // Will respond asynchronously\n    }\n});\n// Handle tab updates\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\n    if (changeInfo.status === 'complete' && tab.url?.startsWith('http')) {\n        try {\n            // Get whitelist status\n            const { whitelist = [] } = await chrome.storage.sync.get({ whitelist: [] });\n            const isWhitelisted = tab.url && whitelist.includes(new URL(tab.url).hostname);\n            // Execute content script\n            await chrome.scripting.executeScript({\n                target: { tabId },\n                files: ['content.js']\n            });\n            // If whitelisted, send message to start highlighting\n            if (isWhitelisted) {\n                await chrome.tabs.sendMessage(tabId, { action: 'toggleHighlight' });\n            }\n        }\n        catch (error) {\n            console.error('Error initializing tab:', error);\n        }\n    }\n});\n"],"names":["chrome","runtime","onInstalled","addListener","details","reason","openOptionsPage","onMessage","message","sender","sendResponse","type","storage","sync","get","data","tabs","onUpdated","async","tabId","changeInfo","tab","status","url","startsWith","whitelist","isWhitelisted","includes","URL","hostname","scripting","executeScript","target","files","sendMessage","action","error","console"],"sourceRoot":""}